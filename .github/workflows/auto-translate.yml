name: Auto Translate Documentation

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**/*.md'
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**/*.md'

jobs:
  translate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for better diff detection
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install GitHub CLI
      run: |
        type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
        && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
        && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
        && sudo apt update \
        && sudo apt install gh -y
    
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Check for documentation changes
      id: check-changes
      run: |
        # Get changed markdown files
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '\.md$' || true)
        echo "Changed files: $CHANGED_FILES"
        
        if [ -n "$CHANGED_FILES" ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "changed_files=$CHANGED_FILES" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Run translation workflow
      if: steps.check-changes.outputs.has_changes == 'true'
      env:
        DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create a new branch for translations
        BRANCH_NAME="translation-update-$(date +%s)"
        git checkout -b $BRANCH_NAME
        
        # Run the translation script
        python translate.py --mode github-actions
        
        # Check if there are any changes to commit
        if git diff --quiet; then
          echo "No translation changes detected"
          exit 0
        fi
        
        # Commit translation changes
        git add .
        git commit -m "Auto-translate: Update translations for changed documentation
        
        Changed files: ${{ steps.check-changes.outputs.changed_files }}
        
        This PR was automatically generated by the translation workflow."
        
        # Push the branch
        git push origin $BRANCH_NAME
        
        # Create pull request using GitHub CLI
        gh pr create \
          --title "Translation needed - content update" \
          --body "## Automatic Translation Update
        
        This PR contains automatic translations for the following changed files:
        
        ${{ steps.check-changes.outputs.changed_files }}
        
        ### Review Instructions:
        1. Review the translated content for accuracy
        2. Check that formatting and links are preserved
        3. Verify that the translations maintain the original meaning
        4. Approve and merge if satisfied
        
        ### Note:
        This PR was automatically generated by the translation system. Please review the changes before merging.
        
        **Generated**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" \
          --base main \
          --head $BRANCH_NAME
        
        echo "Pull request created successfully"
    
    - name: Skip if no changes
      if: steps.check-changes.outputs.has_changes == 'false'
      run: |
        echo "No documentation changes detected. Skipping translation workflow."
